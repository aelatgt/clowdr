type Mutation {
  createContentGroupRoom (
    contentGroupId: uuid!
    conferenceId: uuid!
  ): CreateContentGroupRoomOutput
}


type Mutation {
  createRoomDm (
    conferenceId: uuid!
    attendeeIds: [uuid]!
  ): CreateRoomDmOutput
}


type Query {
  echo (
    message: String!
  ): EchoOutput
}


type Mutation {
  generateChatRemoteServiceIds : GenerateChatRemoteServiceIdsOutput
}


type Mutation {
  generateChatRemoteToken (
    attendeeId: uuid!
  ): ChatRemoteToken
}


type Mutation {
  generateChatRemoteUserIds : GenerateChatRemoteUserIdsOutput
}


type Query {
  getContentItem (
    magicToken: String!
  ): [GetContentItemOutput]
}


type Mutation {
  getGoogleOAuthUrl (
    scopes: [String!]!
  ): GetGoogleOAuthUrlOutput
}


type Query {
  getUploadAgreement (
    magicToken: String!
  ): GetUploadAgreementOutput
}


type Mutation {
  invitationConfirmCurrent (
    inviteCode: uuid!
  ): ConfirmInvitationOutput
}


type Mutation {
  invitationConfirmSendInitialEmail (
    inviteInput: InvitationConfirmationEmailInput!
  ): InvitationConfirmationEmailOutput
}


type Mutation {
  invitationConfirmSendRepeatEmail (
    inviteInput: InvitationConfirmationEmailInput!
  ): InvitationConfirmationEmailOutput
}


type Mutation {
  invitationConfirmWithCode (
    inviteInput: ConfirmInvitationInput!
  ): ConfirmInvitationOutput
}


type Mutation {
  joinEventVonageSession (
    eventId: uuid!
  ): JoinEventVonageSessionOutput
}


type Mutation {
  joinRoomVonageSession (
    roomId: uuid!
  ): JoinRoomVonageSessionOutput
}


type Mutation {
  presence_Flush : PresenceFlushOutput!
}


type Query {
  presence_Summary : PresenceSummaryOutput
}


type Query {
  protectedEcho (
    message: String!
  ): ProtectedEchoOutput
}


type Mutation {
  refreshYouTubeData (
    attendeeGoogleAccountId: uuid!
  ): RefreshYouTubeDataOutput
}


type Mutation {
  stopEventBroadcast (
    eventId: uuid!
  ): StopEventBroadcastOutput
}


type Mutation {
  submitContentItem (
    data: jsonb!
    magicToken: String!
  ): SubmitContentItemOutput
}


type Mutation {
  submitGoogleOAuthCode (
    code: String!
    state: String!
  ): SubmitGoogleOAuthCodeOutput
}


type Mutation {
  updateProfilePhoto (
    attendeeId: uuid!
    s3URL: String
  ): UpdateProfilePhotoResponse
}


type Mutation {
  updateSubtitles (
    contentItemId: String!
    subtitleText: String!
    magicToken: String!
  ): SubmitUpdatedSubtitlesOutput
}




input SampleInput {
  username : String!
  password : String!
}

input EchoInput {
  message : String!
}

input SubmitContentItemInput {
  contentItemData : jsonb!
}

input ConfirmInvitationInput {
  inviteCode : uuid!
  confirmationCode : String!
}

input InvitationConfirmationEmailInput {
  inviteCode : uuid!
}

input SubmitUpdatedSubtitlesInput {
  contentItemId : String!
  subtitleText : String!
  accessToken : String!
}

type SampleOutput {
  accessToken : String!
}

type EchoOutput {
  message : String!
}

type ProtectedEchoOutput {
  message : String!
}

type SubmitContentItemOutput {
  success : Boolean!
  message : String!
}

type ConfirmInvitationOutput {
  ok : String!
  confSlug : String
}

type InvitationConfirmationEmailOutput {
  sent : Boolean!
}

type InvitationSendEmailResult {
  attendeeId : String!
  sent : Boolean!
}

type GetContentItemOutput {
  contentTypeName : String!
  name : String!
  id : String!
  data : jsonb!
  layoutData : jsonb
  contentGroupTitle : String!
}

type SubmitUpdatedSubtitlesOutput {
  success : Boolean!
  message : String!
}

type GetUploadAgreementOutput {
  agreementText : String
}

type ConferencePrepareOutput {
  success : Boolean!
  message : String
}

type UploaderSendSubmissionRequestResult {
  uploaderId : uuid!
  sent : Boolean!
}

type JoinEventVonageSessionOutput {
  accessToken : String
}

type JoinRoomVonageSessionOutput {
  sessionId : String
  accessToken : String
}

type ProfilePhotoURLResponse {
  url : String!
}

type UpdateProfilePhotoResponse {
  ok : Boolean!
  photoURL_350x350 : String
  photoURL_50x50 : String
}

type CreateRoomDmOutput {
  roomId : uuid
  chatId : uuid
  message : String
}

type CreateContentGroupRoomOutput {
  roomId : String
  message : String
}

type StopEventBroadcastOutput {
  broadcastsStopped : Int!
}

type GetGoogleOAuthUrlOutput {
  url : String!
}

type SubmitGoogleOAuthTokenOutput {
  success : Boolean!
  message : String
}

type SubmitGoogleOAuthCodeOutput {
  success : Boolean!
  message : String
}

type RefreshYouTubeDataOutput {
  success : Boolean!
  message : String
}

type ChatRemoteToken {
  jwt : String!
  expiry : Int!
}

type GenerateChatRemoteServiceIdsOutput {
  error : String
}

type GenerateChatRemoteUserIdsOutput {
  error : String
}

type PresenceSummaryOutput {
  total_unique_tabs : Int!
  total_unique_user_ids : Int!
  pages : jsonb
}

type PresenceFlushOutput {
  ok : String
}

